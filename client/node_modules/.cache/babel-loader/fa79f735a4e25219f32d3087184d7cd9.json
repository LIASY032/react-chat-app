{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nconst PREFIX = 'whatsapp-clone-';\n\nfunction useLocalStorage(key, initialValue) {\n  _s();\n\n  const prefixedKey = PREFIX + key;\n  console.log(prefixedKey);\n  const [value, setValue] = useState(function () {\n    const jsonValue = localStorage.getItem(prefixedKey);\n\n    if (jsonValue != null && jsonValue !== undefined) {\n      return JSON.parse(jsonValue);\n    }\n\n    if (typeof initialValue === 'function') {\n      return initialValue();\n    } else {\n      return initialValue;\n    }\n  });\n  useEffect(function () {\n    localStorage.setItem(prefixedKey, JSON.stringify(value));\n  }, [prefixedKey, value]);\n  return [value, setValue];\n}\n\n_s(useLocalStorage, \"S50t04dAEKfUCcc2MP+qHpsWKq0=\");\n\nexport default useLocalStorage; // import { useEffect, useState } from 'react'\n// const PREFIX = 'whatsapp-clone-'\n// export default function useLocalStorage(key, initialValue) {\n//   const prefixedKey = PREFIX + key\n//   const [value, setValue] = useState(() => {\n//     const jsonValue = localStorage.getItem(prefixedKey)\n//     if (jsonValue != null) return JSON.parse(jsonValue)\n//     if (typeof initialValue === 'function') {\n//       return initialValue()\n//     } else {\n//       return initialValue\n//     }\n//   })\n//   useEffect(() => {\n//     localStorage.setItem(prefixedKey, JSON.stringify(value))\n//   }, [prefixedKey, value])\n//   return [value, setValue]\n// }","map":{"version":3,"sources":["/Users/fanliang/Desktop/reactchatapp/client/src/hooks/useLocalStorage.js"],"names":["useState","useEffect","PREFIX","useLocalStorage","key","initialValue","prefixedKey","console","log","value","setValue","jsonValue","localStorage","getItem","undefined","JSON","parse","setItem","stringify"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AAEA,MAAMC,MAAM,GAAG,iBAAf;;AAEA,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,YAA9B,EAA4C;AAAA;;AACxC,QAAMC,WAAW,GAAGJ,MAAM,GAAGE,GAA7B;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,YAAY;AAC3C,UAAMW,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqBP,WAArB,CAAlB;;AAEA,QAAIK,SAAS,IAAI,IAAb,IAAqBA,SAAS,KAAKG,SAAvC,EAAkD;AAC9C,aAAOC,IAAI,CAACC,KAAL,CAAWL,SAAX,CAAP;AACH;;AACD,QAAI,OAAON,YAAP,KAAwB,UAA5B,EAAwC;AACpC,aAAOA,YAAY,EAAnB;AACH,KAFD,MAEO;AACH,aAAOA,YAAP;AACH;AACJ,GAXiC,CAAlC;AAaAJ,EAAAA,SAAS,CAAC,YAAY;AAClBW,IAAAA,YAAY,CAACK,OAAb,CAAqBX,WAArB,EAAkCS,IAAI,CAACG,SAAL,CAAeT,KAAf,CAAlC;AACH,GAFQ,EAEN,CAACH,WAAD,EAAcG,KAAd,CAFM,CAAT;AAGA,SAAO,CAACA,KAAD,EAAQC,QAAR,CAAP;AACH;;GApBQP,e;;AAsBT,eAAeA,eAAf,C,CAKA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA","sourcesContent":["import {useState, useEffect} from 'react';\n\nconst PREFIX = 'whatsapp-clone-';\n\nfunction useLocalStorage(key, initialValue) {\n    const prefixedKey = PREFIX + key;\n    console.log(prefixedKey);\n    const [value, setValue] = useState(function () {\n        const jsonValue = localStorage.getItem(prefixedKey);\n       \n        if (jsonValue != null && jsonValue !== undefined) {\n            return JSON.parse(jsonValue);\n        }\n        if (typeof initialValue === 'function') {\n            return initialValue();\n        } else {\n            return initialValue;\n        }\n    })\n\n    useEffect(function () {\n        localStorage.setItem(prefixedKey, JSON.stringify(value));\n    }, [prefixedKey, value])\n    return [value, setValue]\n}\n\nexport default useLocalStorage\n\n\n\n\n// import { useEffect, useState } from 'react'\n\n// const PREFIX = 'whatsapp-clone-'\n\n// export default function useLocalStorage(key, initialValue) {\n//   const prefixedKey = PREFIX + key\n//   const [value, setValue] = useState(() => {\n//     const jsonValue = localStorage.getItem(prefixedKey)\n//     if (jsonValue != null) return JSON.parse(jsonValue)\n//     if (typeof initialValue === 'function') {\n//       return initialValue()\n//     } else {\n//       return initialValue\n//     }\n//   })\n\n//   useEffect(() => {\n//     localStorage.setItem(prefixedKey, JSON.stringify(value))\n//   }, [prefixedKey, value])\n\n//   return [value, setValue]\n// }"]},"metadata":{},"sourceType":"module"}